from itertools import permutations

# Example: distance matrix between 4 cities
dist = [
    [0, 10, 15, 20],
    [10, 0, 35, 25],
    [15, 35, 0, 30],
    [20, 25, 30, 0]
]

cities = [0, 1, 2, 3]  # city indices

def tsp():
    min_cost = float('inf')
    best_path = None

    # Generate all possible paths starting from city 0
    for perm in permutations(cities[1:]):  # fix starting city 0
        path = [0] + list(perm) + [0]  # return to start
        cost = sum(dist[path[i]][path[i+1]] for i in range(len(path)-1))
        if cost < min_cost:
            min_cost = cost
            best_path = path

    print("Optimal path:", best_path)
    print("Minimum cost:", min_cost)

tsp()
